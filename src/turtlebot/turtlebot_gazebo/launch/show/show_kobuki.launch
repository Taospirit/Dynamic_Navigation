<launch>
  <arg name="base"      value="kobuki"/> <!-- kobuki, create -->
  <arg name="stacks"    value="hexagons"/>  <!-- hexagons, circles -->
  <arg name="3d_sensor" value="kinect"/>  <!-- kinect, asus_xtion_pro -->
  
  <arg name="rviz" value="true"/>
  <!-- <arg name="rviz_file" value="single_turtlebot"/> -->
  <arg name="world" value="empty" />
  <arg name="world_file"  default="$(find turtlebot_gazebo)/worlds/empty_goal.world"/>

  <arg name="urdf_file" default="$(find xacro)/xacro --inorder '$(find turtlebot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'" />  
  <param name="robot_description" command="$(arg urdf_file)" />
  
  <!-- Gazebo model spawner -->
  <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model"
        args="$(optenv ROBOT_INITIAL_POSE) -unpause -urdf -param robot_description -model turtlebot"/>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>
  
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
  </node>

  <node name="gazebo" pkg="gazebo_ros" type="gzserver" output="screen"
      args="$(arg world_file)" />
  <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>

  <group if="$(arg rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_description)/config/$(arg base).rviz" />
  </group>


</launch>